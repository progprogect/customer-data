-- =========================
-- Generate Target Labels for 6 Months (Weekly Snapshots)
-- =========================
-- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–∞—Ä–≥–µ—Ç–æ–≤ purchase_next_30d –¥–ª—è –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö —Å–Ω–∞–ø—à–æ—Ç–æ–≤ –∑–∞ 6 –º–µ—Å—è—Ü–µ–≤

-- ========= –ü–ê–†–ê–ú–ï–¢–†–´ =========
WITH params AS (
  SELECT
    30 ::int AS target_window_days,                    -- –æ–∫–Ω–æ –¥–ª—è —Ç–∞—Ä–≥–µ—Ç–∞ (30 –¥–Ω–µ–π)
    ARRAY['paid','shipped','completed']::text[] AS ok_status,  -- —É—Å–ø–µ—à–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤
    6 ::int AS months_history                          -- –≥–ª—É–±–∏–Ω–∞ –∏—Å—Ç–æ—Ä–∏–∏ –≤ –º–µ—Å—è—Ü–∞—Ö
),

-- ========= –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï –í–†–ï–ú–ï–ù–ù–´–• –ì–†–ê–ù–ò–¶ =========
time_bounds AS (
  SELECT 
    p.target_window_days,
    p.ok_status,
    -- –ù–∞—Ö–æ–¥–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –¥–∞—Ç—É –∑–∞–∫–∞–∑–∞
    MAX(o.created_at::date) AS max_order_date,
    -- –ü–æ—Å–ª–µ–¥–Ω—è—è –≤–∞–ª–∏–¥–Ω–∞—è –¥–∞—Ç–∞ —Å–Ω–∞–ø—à–æ—Ç–∞ (—á—Ç–æ–±—ã –æ–∫–Ω–æ target –±—ã–ª–æ –ø–æ–ª–Ω—ã–º)
    (MAX(o.created_at::date) - (p.target_window_days || ' days')::interval)::date AS max_valid_snapshot_date,
    -- –ù–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ —Å–Ω–∞–ø—à–æ—Ç–∞ (6 –º–µ—Å—è—Ü–µ–≤ –Ω–∞–∑–∞–¥ –æ—Ç max_valid_snapshot_date)
    (MAX(o.created_at::date) - (p.target_window_days || ' days')::interval - (p.months_history || ' months')::interval)::date AS min_snapshot_date
  FROM orders o, params p
  WHERE o.status = ANY(p.ok_status)
),

-- ========= –ì–ï–ù–ï–†–ê–¶–ò–Ø –ï–ñ–ï–ù–ï–î–ï–õ–¨–ù–´–• –°–ù–ê–ü–®–û–¢–û–í (–ü–û–ù–ï–î–ï–õ–¨–ù–ò–ö–ò) =========
weekly_snapshots AS (
  SELECT 
    -- –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∏ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ
    (t.min_snapshot_date + ((generate_series(0, 
      EXTRACT(days FROM (t.max_valid_snapshot_date - t.min_snapshot_date))::int / 7) * 7) || ' days')::interval)::date AS snapshot_date,
    t.max_order_date,
    t.max_valid_snapshot_date,
    t.target_window_days,
    t.ok_status
  FROM time_bounds t
  WHERE 
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞—Ç–∞ –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –≤–∞–ª–∏–¥–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω
    (t.min_snapshot_date + ((generate_series(0, 
      EXTRACT(days FROM (t.max_valid_snapshot_date - t.min_snapshot_date))::int / 7) * 7) || ' days')::interval)::date 
    <= t.max_valid_snapshot_date
    -- –ò —á—Ç–æ —ç—Ç–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (1 = –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –≤ PostgreSQL)
    AND EXTRACT(dow FROM (t.min_snapshot_date + ((generate_series(0, 
      EXTRACT(days FROM (t.max_valid_snapshot_date - t.min_snapshot_date))::int / 7) * 7) || ' days')::interval)::date) = 1
),

-- ========= –ü–û–õ–£–ß–ï–ù–ò–ï –í–°–ï–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô =========
all_users AS (
  SELECT DISTINCT user_id 
  FROM users 
  WHERE user_id IS NOT NULL
),

-- ========= CROSS JOIN: –ö–ê–ñ–î–´–ô –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ √ó –ö–ê–ñ–î–´–ô –°–ù–ê–ü–®–û–¢ =========
user_snapshots AS (
  SELECT 
    u.user_id,
    ws.snapshot_date,
    ws.target_window_days,
    ws.ok_status
  FROM all_users u
  CROSS JOIN weekly_snapshots ws
),

-- ========= –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ü–ï–†–í–û–ì–û –ó–ê–ö–ê–ó–ê –í –¶–ï–õ–ï–í–û–ú –û–ö–ù–ï =========
target_orders AS (
  SELECT 
    us.user_id,
    us.snapshot_date,
    o.order_id,
    o.created_at::date AS order_date,
    -- –ù—É–º–µ—Ä—É–µ–º –∑–∞–∫–∞–∑—ã –≤ –æ–∫–Ω–µ –ø–æ –¥–∞—Ç–µ
    ROW_NUMBER() OVER (PARTITION BY us.user_id, us.snapshot_date ORDER BY o.created_at) AS order_rank
  FROM user_snapshots us
  JOIN orders o ON o.user_id = us.user_id
  WHERE 
    o.status = ANY(us.ok_status)
    -- –ó–∞–∫–∞–∑ –≤ –æ–∫–Ω–µ (snapshot_date+1, snapshot_date+30]
    AND o.created_at::date > us.snapshot_date 
    AND o.created_at::date <= (us.snapshot_date + (us.target_window_days || ' days')::interval)::date
),

-- ========= –§–û–†–ú–ò–†–û–í–ê–ù–ò–ï –§–ò–ù–ê–õ–¨–ù–´–• –õ–ï–ô–ë–õ–û–í =========
final_labels AS (
  SELECT 
    us.user_id,
    us.snapshot_date,
    CASE 
      WHEN t.order_id IS NOT NULL THEN TRUE 
      ELSE FALSE 
    END AS purchase_next_30d,
    t.order_id AS first_order_id,
    t.order_date AS first_order_date
  FROM user_snapshots us
  LEFT JOIN target_orders t ON t.user_id = us.user_id 
                           AND t.snapshot_date = us.snapshot_date 
                           AND t.order_rank = 1  -- —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑ –≤ –æ–∫–Ω–µ
)

-- ========= –í–°–¢–ê–í–ö–ê –î–ê–ù–ù–´–• –° –û–ë–ù–û–í–õ–ï–ù–ò–ï–ú =========
INSERT INTO ml_labels_purchase_30d (
  user_id, 
  snapshot_date, 
  purchase_next_30d, 
  first_order_id, 
  first_order_date
)
SELECT 
  user_id,
  snapshot_date,
  purchase_next_30d,
  first_order_id,
  first_order_date
FROM final_labels
ON CONFLICT (user_id, snapshot_date) 
DO UPDATE SET 
  purchase_next_30d = EXCLUDED.purchase_next_30d,
  first_order_id = EXCLUDED.first_order_id,
  first_order_date = EXCLUDED.first_order_date;

-- ========= –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –°–¢–ê–¢–ò–°–¢–ò–ö–ò =========
DO $$
DECLARE
    total_rows INTEGER;
    positive_class_count INTEGER;
    negative_class_count INTEGER;
    positive_class_percent NUMERIC(5,2);
    min_snapshot DATE;
    max_snapshot DATE;
    max_order_in_db DATE;
    log_message TEXT;
BEGIN
    -- –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    SELECT COUNT(*) INTO total_rows FROM ml_labels_purchase_30d;
    
    SELECT COUNT(*) INTO positive_class_count 
    FROM ml_labels_purchase_30d 
    WHERE purchase_next_30d = TRUE;
    
    SELECT COUNT(*) INTO negative_class_count 
    FROM ml_labels_purchase_30d 
    WHERE purchase_next_30d = FALSE;
    
    positive_class_percent := (positive_class_count::NUMERIC / NULLIF(total_rows, 0)) * 100;
    
    SELECT MIN(snapshot_date), MAX(snapshot_date) 
    INTO min_snapshot, max_snapshot 
    FROM ml_labels_purchase_30d;
    
    SELECT MAX(created_at::date) 
    INTO max_order_in_db 
    FROM orders 
    WHERE status IN ('paid', 'shipped', 'completed');
    
    -- –§–æ—Ä–º–∏—Ä—É–µ–º –ª–æ–≥ —Å–æ–æ–±—â–µ–Ω–∏–µ
    log_message := format(
        E'[ML TARGET LABELS GENERATED]\n' ||
        'üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n' ||
        '  ‚Ä¢ –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫ (—Å—Ä–µ–∑–æ–≤): %s\n' ||
        '  ‚Ä¢ –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –∫–ª–∞—Å—Å (purchase_next_30d=1): %s\n' ||
        '  ‚Ä¢ –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –∫–ª–∞—Å—Å (purchase_next_30d=0): %s\n' ||
        '  ‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞: %s%%\n' ||
        'üìÖ –í—Ä–µ–º–µ–Ω–Ω—ã–µ –≥—Ä–∞–Ω–∏—Ü—ã:\n' ||
        '  ‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π snapshot_date: %s\n' ||
        '  ‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π snapshot_date: %s\n' ||
        '  ‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–∫–∞–∑ –≤ —Å–∏—Å—Ç–µ–º–µ: %s\n' ||
        '‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!',
        total_rows,
        positive_class_count,
        negative_class_count,
        positive_class_percent,
        min_snapshot,
        max_snapshot,
        max_order_in_db
    );
    
    -- –í—ã–≤–æ–¥–∏–º –≤ –ª–æ–≥
    RAISE NOTICE '%', log_message;
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —É—Å–ª–æ–≤–∏—è
    IF positive_class_percent < 5 OR positive_class_percent > 30 THEN
        RAISE WARNING '–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ (%%) –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –≥—Ä–∞–Ω–∏—Ü—ã 5-30%%', positive_class_percent;
    END IF;
    
    IF total_rows = 0 THEN
        RAISE EXCEPTION '–ù–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ.';
    END IF;
    
END $$;
