#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Data loader for Customer Data Analytics
–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ PostgreSQL –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö

Author: Customer Data Analytics Team
"""

import os
import subprocess
import sys
from pathlib import Path

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
DATABASE_NAME = "customer_data"
SEED_DIR = "seed"
HOST = "localhost"
PORT = "5432"
USER = "mikitavalkunovich"

def run_sql_file(file_path: str, description: str):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç SQL —Ñ–∞–π–ª –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    print(f"üîÑ {description}...")
    
    try:
        result = subprocess.run([
            "psql", 
            "-h", HOST,
            "-p", PORT,
            "-U", USER,
            "-d", DATABASE_NAME,
            "-f", file_path
        ], capture_output=True, text=True, check=True)
        
        print(f"‚úÖ {description} - —É—Å–ø–µ—à–Ω–æ")
        if result.stdout:
            print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {result.stdout.strip()}")
            
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ {description}")
        print(f"–ö–æ–¥ –æ—à–∏–±–∫–∏: {e.returncode}")
        print(f"Stderr: {e.stderr}")
        return False
    except FileNotFoundError:
        print("‚ùå psql –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ PostgreSQL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ PATH")
        return False
    
    return True

def check_database_exists():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    try:
        result = subprocess.run([
            "psql", 
            "-h", HOST,
            "-p", PORT,
            "-U", USER,
            "-d", DATABASE_NAME,
            "-c", "SELECT 1;"
        ], capture_output=True, text=True, check=True)
        
        return True
    except:
        return False

def main():
    print("üöÄ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ Customer Data Analytics")
    print(f"üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {DATABASE_NAME}")
    print(f"üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–∞–Ω–Ω—ã—Ö: {SEED_DIR}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –¥–∞–Ω–Ω—ã–º–∏
    if not os.path.exists(SEED_DIR):
        print(f"‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {SEED_DIR} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        print("–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ generate_data.py –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö")
        sys.exit(1)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if not check_database_exists():
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö {DATABASE_NAME} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        print("–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö:")
        print(f"  createdb {DATABASE_NAME}")
        sys.exit(1)
    
    # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    files_to_load = [
        ("01_categories.sql", "–ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ–≤–∞—Ä–æ–≤"),
        ("00_copy.sql", "–ó–∞–≥—Ä—É–∑–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (—Ç–æ–≤–∞—Ä—ã, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –∑–∞–∫–∞–∑—ã, —Å–æ–±—ã—Ç–∏—è)")
    ]
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã
    success = True
    for filename, description in files_to_load:
        file_path = os.path.join(SEED_DIR, filename)
        
        if not os.path.exists(file_path):
            print(f"‚ùå –§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            success = False
            continue
        
        if not run_sql_file(file_path, description):
            success = False
            break
    
    if success:
        print("\n‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é
        validate_file = os.path.join(SEED_DIR, "99_validate.sql")
        if os.path.exists(validate_file):
            print("\nüîç –ó–∞–ø—É—Å–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö...")
            run_sql_file(validate_file, "–í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö")
        
        print("\nüéâ –ì–æ—Ç–æ–≤–æ! –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
        print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("  1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ API —Å–µ—Ä–≤–µ—Ä: cd api && python main.py")
        print("  2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥: cd frontend && npm start")
        print("  3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Telegram –±–æ—Ç: cd telegram-bot && python main.py")
        
    else:
        print("\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö")
        sys.exit(1)

if __name__ == "__main__":
    main()
