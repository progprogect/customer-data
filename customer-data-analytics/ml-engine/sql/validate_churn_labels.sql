-- =========================
-- Validate Churn Labels Quality
-- =========================
-- –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–∞–∑–º–µ—Ç–∫–∏ churn –ª–µ–π–±–ª–æ–≤ —Å –≥–æ—Ä–∏–∑–æ–Ω—Ç–æ–º 60 –¥–Ω–µ–π

-- ========= –ü–ê–†–ê–ú–ï–¢–†–´ –í–ê–õ–ò–î–ê–¶–ò–ò =========
WITH validation_params AS (
  SELECT
    60 ::int AS churn_window_days,
    ARRAY['paid','shipped','completed']::text[] AS ok_status,
    30 ::int AS min_tenure_days
),

-- ========= –û–°–ù–û–í–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê =========
basic_stats AS (
  SELECT 
    COUNT(*) AS total_records,
    COUNT(*) FILTER (WHERE is_churn_next_60d = TRUE) AS churn_count,
    COUNT(*) FILTER (WHERE is_churn_next_60d = FALSE) AS retention_count,
    COUNT(DISTINCT user_id) AS unique_users,
    COUNT(DISTINCT snapshot_date) AS unique_snapshots,
    MIN(snapshot_date) AS earliest_snapshot,
    MAX(snapshot_date) AS latest_snapshot
  FROM ml_labels_churn_60d
),

-- ========= –†–ê–°–ß–ï–¢ CHURN RATE =========
churn_rate AS (
  SELECT 
    bs.*,
    (bs.churn_count::NUMERIC / bs.total_records::NUMERIC) * 100 AS churn_rate_percent,
    (bs.retention_count::NUMERIC / bs.total_records::NUMERIC) * 100 AS retention_rate_percent
  FROM basic_stats bs
),

-- ========= –ü–†–û–í–ï–†–ö–ê –ö–û–ù–°–ò–°–¢–ï–ù–¢–ù–û–°–¢–ò –° –ó–ê–ö–ê–ó–ê–ú–ò =========
consistency_check AS (
  SELECT 
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º churn=TRUE: –ù–ï –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–∞–∫–∞–∑–æ–≤ –≤ –æ–∫–Ω–µ
    COUNT(*) FILTER (
      WHERE is_churn_next_60d = TRUE 
        AND EXISTS (
          SELECT 1 FROM orders o
          WHERE o.user_id = ml_labels_churn_60d.user_id
            AND o.status = ANY((SELECT ok_status FROM validation_params))
            AND o.created_at::date > ml_labels_churn_60d.snapshot_date
            AND o.created_at::date <= (ml_labels_churn_60d.snapshot_date + (SELECT churn_window_days || ' days' FROM validation_params)::interval)
        )
    ) AS churn_with_orders_error_count,
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º churn=FALSE: –î–û–õ–ñ–ï–ù –±—ã—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∑–∞–∫–∞–∑ –≤ –æ–∫–Ω–µ
    COUNT(*) FILTER (
      WHERE is_churn_next_60d = FALSE 
        AND NOT EXISTS (
          SELECT 1 FROM orders o
          WHERE o.user_id = ml_labels_churn_60d.user_id
            AND o.status = ANY((SELECT ok_status FROM validation_params))
            AND o.created_at::date > ml_labels_churn_60d.snapshot_date
            AND o.created_at::date <= (ml_labels_churn_60d.snapshot_date + (SELECT churn_window_days || ' days' FROM validation_params)::interval)
        )
    ) AS retention_without_orders_error_count
  FROM ml_labels_churn_60d
),

-- ========= –ü–†–û–í–ï–†–ö–ê ELIGIBILITY –ö–†–ò–¢–ï–†–ò–ï–í =========
eligibility_check AS (
  SELECT 
    -- –ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (—Å—Ç–∞–∂ < 30 –¥–Ω–µ–π)
    COUNT(*) FILTER (
      WHERE EXISTS (
        SELECT 1 FROM orders o
        WHERE o.user_id = ml_labels_churn_60d.user_id
          AND o.status = ANY((SELECT ok_status FROM validation_params))
        HAVING (ml_labels_churn_60d.snapshot_date - MIN(o.created_at::date)) < (SELECT min_tenure_days FROM validation_params)
      )
    ) AS new_users_included_error_count,
    
    -- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–µ–∑ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∑–∞ 180 –¥–Ω–µ–π
    COUNT(*) FILTER (
      WHERE NOT EXISTS (
        SELECT 1 FROM orders o
        WHERE o.user_id = ml_labels_churn_60d.user_id
          AND o.status = ANY((SELECT ok_status FROM validation_params))
          AND o.created_at::date >= (ml_labels_churn_60d.snapshot_date - '180 days'::interval)
          AND o.created_at::date <= ml_labels_churn_60d.snapshot_date
      )
    ) AS inactive_users_included_error_count
  FROM ml_labels_churn_60d
),

-- ========= –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ü–û –î–ê–¢–ê–ú =========
date_distribution AS (
  SELECT 
    snapshot_date,
    COUNT(*) AS records_count,
    COUNT(*) FILTER (WHERE is_churn_next_60d = TRUE) AS churn_count,
    (COUNT(*) FILTER (WHERE is_churn_next_60d = TRUE)::NUMERIC / COUNT(*)::NUMERIC) * 100 AS churn_rate_percent
  FROM ml_labels_churn_60d
  GROUP BY snapshot_date
  ORDER BY snapshot_date
),

-- ========= –ü–†–û–í–ï–†–ö–ê –ú–ï–¢–ê–î–ê–ù–ù–´–• =========
metadata_check AS (
  SELECT 
    COUNT(*) FILTER (WHERE last_order_before_date IS NULL) AS missing_last_order_before,
    COUNT(*) FILTER (WHERE is_churn_next_60d = FALSE AND first_order_after_date IS NULL) AS retention_missing_first_order_after,
    COUNT(*) FILTER (WHERE is_churn_next_60d = TRUE AND first_order_after_date IS NOT NULL) AS churn_with_first_order_after_error
  FROM ml_labels_churn_60d
)

-- ========= –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢ =========
SELECT 
  '=========================' AS separator1,
  'CHURN LABELS VALIDATION REPORT' AS title,
  '=========================' AS separator2,
  
  -- –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  'üìä –û–°–ù–û–í–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:' AS section1,
  cr.total_records AS total_records,
  cr.unique_users AS unique_users,
  cr.unique_snapshots AS unique_snapshots,
  cr.earliest_snapshot AS earliest_snapshot,
  cr.latest_snapshot AS latest_snapshot,
  
  -- Churn rate
  'üìà CHURN RATE:' AS section2,
  cr.churn_count AS churn_cases,
  cr.retention_count AS retention_cases,
  ROUND(cr.churn_rate_percent, 2) AS churn_rate_percent,
  ROUND(cr.retention_rate_percent, 2) AS retention_rate_percent,
  
  -- –ö–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å
  '‚úÖ –ö–û–ù–°–ò–°–¢–ï–ù–¢–ù–û–°–¢–¨:' AS section3,
  cc.churn_with_orders_error_count AS churn_with_orders_errors,
  cc.retention_without_orders_error_count AS retention_without_orders_errors,
  
  -- Eligibility
  'üë• ELIGIBILITY:' AS section4,
  ec.new_users_included_error_count AS new_users_errors,
  ec.inactive_users_included_error_count AS inactive_users_errors,
  
  -- –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
  'üìã –ú–ï–¢–ê–î–ê–ù–ù–´–ï:' AS section5,
  mc.missing_last_order_before AS missing_last_order_before,
  mc.retention_missing_first_order_after AS retention_missing_first_order_after,
  mc.churn_with_first_order_after_error AS churn_with_first_order_after_error,
  
  -- –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞
  'üéØ –û–¶–ï–ù–ö–ê –ö–ê–ß–ï–°–¢–í–ê:' AS section6,
  CASE 
    WHEN (cc.churn_with_orders_error_count + cc.retention_without_orders_error_count + 
          ec.new_users_included_error_count + ec.inactive_users_included_error_count + 
          mc.churn_with_first_order_after_error) = 0 THEN 'EXCELLENT'
    WHEN (cc.churn_with_orders_error_count + cc.retention_without_orders_error_count + 
          ec.new_users_included_error_count + ec.inactive_users_included_error_count + 
          mc.churn_with_first_order_after_error) <= 10 THEN 'GOOD'
    ELSE 'NEEDS_REVIEW'
  END AS quality_score,
  
  '=========================' AS separator3

FROM churn_rate cr
CROSS JOIN consistency_check cc
CROSS JOIN eligibility_check ec
CROSS JOIN metadata_check mc;

-- ========= –î–ï–¢–ê–õ–¨–ù–û–ï –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ü–û –î–ê–¢–ê–ú =========
SELECT 
  'üìÖ –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ü–û –î–ê–¢–ê–ú:' AS section,
  snapshot_date,
  records_count,
  churn_count,
  ROUND(churn_rate_percent, 1) AS churn_rate_percent
FROM date_distribution dd
ORDER BY snapshot_date;

-- ========= –ü–†–û–í–ï–†–ö–ê –ë–ê–õ–ê–ù–°–ê –ö–õ–ê–°–°–û–í =========
DO $$
DECLARE
    churn_rate NUMERIC;
    quality_issues INTEGER;
BEGIN
    -- –ü–æ–ª—É—á–∞–µ–º churn rate
    SELECT (COUNT(*) FILTER (WHERE is_churn_next_60d = TRUE)::NUMERIC / COUNT(*)::NUMERIC) * 100
    INTO churn_rate
    FROM ml_labels_churn_60d;
    
    -- –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–±–ª–µ–º
    SELECT 
      COUNT(*) FILTER (WHERE is_churn_next_60d = TRUE AND EXISTS (
        SELECT 1 FROM orders o
        WHERE o.user_id = ml_labels_churn_60d.user_id
          AND o.status = ANY(ARRAY['paid','shipped','completed'])
          AND o.created_at::date > ml_labels_churn_60d.snapshot_date
          AND o.created_at::date <= (ml_labels_churn_60d.snapshot_date + '60 days'::interval)
      )) +
      COUNT(*) FILTER (WHERE is_churn_next_60d = FALSE AND NOT EXISTS (
        SELECT 1 FROM orders o
        WHERE o.user_id = ml_labels_churn_60d.user_id
          AND o.status = ANY(ARRAY['paid','shipped','completed'])
          AND o.created_at::date > ml_labels_churn_60d.snapshot_date
          AND o.created_at::date <= (ml_labels_churn_60d.snapshot_date + '60 days'::interval)
      ))
    INTO quality_issues
    FROM ml_labels_churn_60d;
    
    -- –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—É—é –æ—Ü–µ–Ω–∫—É
    RAISE NOTICE '=========================';
    RAISE NOTICE '–ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê –ö–ê–ß–ï–°–¢–í–ê';
    RAISE NOTICE '=========================';
    RAISE NOTICE 'Churn Rate: %.1f%%', churn_rate;
    RAISE NOTICE 'Quality Issues: %', quality_issues;
    
    -- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    IF churn_rate < 10 OR churn_rate > 60 THEN
        RAISE WARNING '‚ö†Ô∏è  Churn rate (%.1f%%) –≤–Ω–µ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ (20-40%%)', churn_rate;
    ELSE
        RAISE NOTICE '‚úÖ Churn rate (%.1f%%) –≤ –æ–∂–∏–¥–∞–µ–º–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ', churn_rate;
    END IF;
    
    IF quality_issues = 0 THEN
        RAISE NOTICE '‚úÖ –û—Ç–ª–∏—á–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö - –Ω–µ—Ç –æ—à–∏–±–æ–∫ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏';
    ELSIF quality_issues <= 10 THEN
        RAISE NOTICE '‚úÖ –•–æ—Ä–æ—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö - –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏ (%)', quality_issues;
    ELSE
        RAISE WARNING '‚ö†Ô∏è  –¢—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ - % –æ—à–∏–±–æ–∫ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏', quality_issues;
    END IF;
    
    RAISE NOTICE '=========================';
END $$;
