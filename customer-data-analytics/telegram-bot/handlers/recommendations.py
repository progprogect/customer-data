"""
Recommendations Handler
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
"""

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
import logging
import httpx

logger = logging.getLogger(__name__)

API_BASE_URL = "http://localhost:8000"


async def recommendations_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /recommendations"""
    await recommendations_callback(update, context)


async def recommendations_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback'–æ–≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π"""
    query = update.callback_query
    await query.answer()
    
    if query.data == "recommendations_main":
        await show_recommendations_main(query)
    elif query.data == "recommendations_get":
        await show_get_recommendations(query)
    elif query.data == "recommendations_similar":
        await show_similar_products(query)
    elif query.data == "recommendations_train":
        await show_train_model(query)
    elif query.data == "recommendations_back":
        await show_recommendations_main(query)


async def show_recommendations_main(query):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π"""
    keyboard = [
        [
            InlineKeyboardButton("üéØ –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", callback_data="recommendations_get"),
            InlineKeyboardButton("üîç –ü–æ—Ö–æ–∂–∏–µ —Ç–æ–≤–∞—Ä—ã", callback_data="recommendations_similar")
        ],
        [
            InlineKeyboardButton("ü§ñ –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏", callback_data="recommendations_train"),
            InlineKeyboardButton("üìä –°—Ç–∞—Ç—É—Å –º–æ–¥–µ–ª–∏", callback_data="recommendations_status")
        ],
        [
            InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="start")
        ]
    ]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    text = """
üéØ <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</b>

–°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π —Ç–æ–≤–∞—Ä–æ–≤.

<b>–§—É–Ω–∫—Ü–∏–∏:</b>
‚Ä¢ <b>üéØ –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</b> - —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
‚Ä¢ <b>üîç –ü–æ—Ö–æ–∂–∏–µ —Ç–æ–≤–∞—Ä—ã</b> - –ø–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤
‚Ä¢ <b>ü§ñ –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏</b> - –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
‚Ä¢ <b>üìä –°—Ç–∞—Ç—É—Å –º–æ–¥–µ–ª–∏</b> - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –º–æ–¥–µ–ª–∏
    """
    
    await query.edit_message_text(
        text,
        parse_mode='HTML',
        reply_markup=reply_markup
    )


async def show_get_recommendations(query):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π"""
    text = """
üéØ <b>–ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</b>

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –≤–≤–µ–¥–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

<b>–§–æ—Ä–º–∞—Ç:</b> <code>user_id:123</code>

<b>–ü—Ä–∏–º–µ—Ä—ã:</b>
‚Ä¢ <code>user_id:1</code> - —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 1
‚Ä¢ <code>user_id:42</code> - —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 42

<b>–ú–µ—Ç–æ–¥—ã —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:</b>
‚Ä¢ Collaborative Filtering - –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ—Ö–æ–∂–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
‚Ä¢ Content-Based - –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ —Ç–æ–≤–∞—Ä–æ–≤
‚Ä¢ Hybrid - –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥
    """
    
    keyboard = [
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="recommendations_main")]
    ]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        text,
        parse_mode='HTML',
        reply_markup=reply_markup
    )


async def show_similar_products(query):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Ö–æ–∂–∏–µ —Ç–æ–≤–∞—Ä—ã"""
    text = """
üîç <b>–ü–æ—Ö–æ–∂–∏–µ —Ç–æ–≤–∞—Ä—ã</b>

–î–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ—Ö–æ–∂–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤–≤–µ–¥–∏ ID —Ç–æ–≤–∞—Ä–∞.

<b>–§–æ—Ä–º–∞—Ç:</b> <code>product_id:123</code>

<b>–ü—Ä–∏–º–µ—Ä—ã:</b>
‚Ä¢ <code>product_id:1</code> - –ø–æ—Ö–æ–∂–∏–µ –Ω–∞ —Ç–æ–≤–∞—Ä 1
‚Ä¢ <code>product_id:42</code> - –ø–æ—Ö–æ–∂–∏–µ –Ω–∞ —Ç–æ–≤–∞—Ä 42

–°–∏—Å—Ç–µ–º–∞ –Ω–∞–π–¥–µ—Ç —Ç–æ–≤–∞—Ä—ã —Å –ø–æ—Ö–æ–∂–∏–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏, –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
    """
    
    keyboard = [
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="recommendations_main")]
    ]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        text,
        parse_mode='HTML',
        reply_markup=reply_markup
    )


async def show_train_model(query):
    """–ü–æ–∫–∞–∑–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏"""
    text = """
ü§ñ <b>–û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π</b>

–ü–µ—Ä–µ–æ–±—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –Ω–∞ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö.

<b>–ú–µ—Ç–æ–¥—ã –æ–±—É—á–µ–Ω–∏—è:</b>
‚Ä¢ Collaborative Filtering
‚Ä¢ Content-Based Filtering
‚Ä¢ Hybrid (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)

<b>–í–Ω–∏–º–∞–Ω–∏–µ:</b> –û–±—É—á–µ–Ω–∏–µ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.
    """
    
    keyboard = [
        [
            InlineKeyboardButton("üîÑ Collaborative", callback_data="recommendations_train_collaborative"),
            InlineKeyboardButton("üîÑ Content-Based", callback_data="recommendations_train_content")
        ],
        [
            InlineKeyboardButton("üîÑ Hybrid", callback_data="recommendations_train_hybrid")
        ],
        [
            InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="recommendations_main")
        ]
    ]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        text,
        parse_mode='HTML',
        reply_markup=reply_markup
    )
